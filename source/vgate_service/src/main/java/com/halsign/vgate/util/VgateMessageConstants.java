package com.halsign.vgate.util;

import java.util.HashMap;
import java.util.Map;

public class VgateMessageConstants {
	
	/******************ErroCode******************/
	public static final int ERROR_CODE_CONNECTION_INVALID = 1001; 
	public static final int ERROR_CODE_CONNECTION_EXPIRED = 1002;
	
	public static final int ERROR_CODE_NETSERVICE_IP_CONFIG_INVALID = 2001;
	
	public static final int ERROR_CODE_TEMPLATE_NOT_EXIST = 3001;
	public static final int ERROR_CODE_TEMPLATE_DELETE_FAILURE = 3002;
	public static final int ERROR_CODE_TEMPLATE_COPY_FAILURE = 3003;
	public static final int ERROR_CODE_TEMPLATE_DATA_NOT_MATCH = 3004;
	public static final int ERROR_CODE_TEMPLATE_INSERT = 3005;
	
	public static final int ERROR_CODE_VM_GET_FAILURE = 4001;
	public static final int ERROR_CODE_VM_HOSTNAME_UPDATE_FAILURE  = 4002;
	public static final int ERROR_CODE_VM_IP_UPDATE_FAILURE = 4003;
	public static final int ERROR_CODE_VM_CONVERT_TO_TEMPLATE_FAILURE = 4004;
	public static final int ERROR_CODE_VM_CREATE_FAILURE = 4005;
	public static final int ERROR_CODE_VM_COPY_VM_FAILURE = 4006;
	public static final int ERROR_CODE_VM_NOT_EXIST = 4007;
	public static final int ERROR_CODE_VM_IS_RUNNING = 4008;
	
	public static final int ERROR_CODE_SR_NFS_NOT_EXIST = 5001;
	public static final int ERROR_CODE_SR_NFS_OUT_OF_SPACE = 5002;
	public static final int ERROR_CODE_SR_NFS_CONNECT_FAILURE = 5003;
	public static final int ERROR_CODE_SR_NFS_FIX_FAILURE = 5004;
	public static final int ERROR_CODE_SR_LOCAL_GET_FAILURE = 5005;
	public static final int ERROR_CODE_SR_LOCAL_OUT_OF_SPACE = 5006;
	
	public static final int ERROR_CODE_DATABASE_CONNECT_FAILURE = 6001;
	public static final int ERROR_CODE_DATABASE_OPERATE_FAILURE = 6002;
	public static final int ERROR_CODE_DATABASE_OUT_OF_SPACE = 6003;
	
	public static final int ERROR_CODE_HOST_NAME_TOO_LONG = 7001;
	public static final int ERROR_CODE_HOST_NAME_INVALID = 7002;
	public static final int ERROR_CODE_HOST_OUT_OF_SPACE = 7003;
	public static final int ERROR_CODE_HOST_DISABLED = 7004;
	public static final int ERROR_CODE_HOST_UUID_INVALID = 7005;
	public static final int ERROR_CODE_HOST_NOT_ALIVE = 7006;
	public static final int ERROR_CODE_HOST_IS_BUSY = 7007;
	
	
	public static final int ERROR_CODE_VBDS_GET_FAILURE = 8001;
	public static final int ERROR_CODE_VBD_GET_FAILURE = 8002;
	public static final int ERROR_CODE_VBD_GET_REC_FAILURE = 8003;
	public static final int ERROR_CODE_VBD_CREATE_FAILURE = 8004;
	
	public static final int ERROR_CODE_VDI_GET_FAILURE = 9001;
	public static final int ERROR_CODE_VDI_GET_REC_FAILURE = 9002;
	public static final int ERROR_CODE_VDI_CREATE_FAILURE = 9003;
	public static final int ERROR_CODE_VDI_DELETE_SNAP_FAILURE = 9004;
	
	public static final int ERROR_CODE_VIFS_GET_FAILURE = 10001;
	public static final int ERROR_CODE_VIF_GET_FAILURE = 10002;
	public static final int ERROR_CODE_VIF_GET_REC_FAILURE = 10003;
	public static final int ERROR_CODE_VIF_CREATE_FAILURE = 10004;
	
	public static final int ERROR_CODE_PBDS_GET_FAILURE = 11001;
	public static final int ERROR_CODE_PBD_GET_FAILURE = 11002;
	public static final int ERROR_CODE_PBD_GET_REC_FAILURE = 11003;
	public static final int ERROR_CODE_PBD_CREATE_FAILURE = 11004;
	
	public static final int ERROR_CODE_POOL_GET_FAILURE = 12001;
	
	public static final int ERROR_CODE_LICENSE_INVALID = 13001;
	public static final int ERROR_CODE_LICENSE_MAC_INVALID = 13002;
	public static final int ERROR_CODE_LICENSE_SOCKET_NUMBER_LESS_THAN_ONE = 13003;
	public static final int ERROR_CODE_LICENSE_GENERATE_FAILURE = 13004;
	public static final int ERROR_CODE_LICENSE_APPLY_FAILURE = 13005;
	
	public static final int ERROR_CODE_UPGRADE_NEED_REBOOT = 14001;
	public static final int ERROR_CODE_UPGRADE_PREINTSTALL = 14010;
	public static final int ERROR_CODE_UPGRADE_UPDATEPACKAGE = 14011;
	public static final int ERROR_CODE_UPGRADE_REMOVEPACKAGE = 14012;
	public static final int ERROR_CODE_UPGRADE_POST_INSTALL = 14013;
	public static final int ERROR_CODE_UPGRADE_MD5_CHECKFAIL = 14101;
	public static final int ERROR_CODE_UPGRADE_TAR_FAIL = 14102;
	public static final int ERROR_CODE_UPGRADE_FILENAME_EMPTY_FAIL = 14103;
	public static final int ERROR_CODE_UPGRADE_TODIR_EMPTY_FAIL = 14104;
	public static final int ERROR_CODE_UPGRADE_INTALL_SHELL_NOT_FOUDN_FAIL = 14105;
	public static final int ERROR_CODE_UPGRADE_INTALL_PACH_NOT_FOUND_FAIL = 14106;
	
	public static final int ERROR_CODE_LOCAL_ENVIRONMENT_ABNOMALLY  = 19001;
	
	/******************ErroMessage******************/
	public static final String ERROR_MSG_CONNECTION_INVALID = "CONNECTION_INVALID"; 
	public static final String ERROR_MSG_CONNECTION_EXPIRED = "CONNECTION_EXPIRED";
	
	public static final String ERROR_MSG_NETSERVICE_IP_CONFIG_INVALID = "NETSERVICE_IP_CONFIG_INVALID";
	
	public static final String ERROR_MSG_TEMPLATE_NOT_EXIST = "TEMPLATE_NOT_EXIST";
	public static final String ERROR_MSG_TEMPLATE_DELETE_FAILURE = "TEMPLATE_DELETE_FAILURE";
	public static final String ERROR_MSG_TEMPLATE_COPY_FAILURE = "TEMPLATE_COPY_FAILURE";
	public static final String ERROR_MSG_TEMPLATE_DATA_NOT_MATCH = "TEMPLATE_DATA_NOT_MATCH_IN_DB_AND_SR";
	
	
	public static final String ERROR_MSG_VM_GET_FAILURE = "VM_GET_FAILURE";
	public static final String ERROR_MSG_VM_HOSTNAME_UPDATE_FAILURE  = "VM_HOSTNAME_UPDATE_FAILURE";
	public static final String ERROR_MSG_VM_IP_UPDATE_FAILURE = "VM_IP_UPDATE_FAILURE";
	public static final String ERROR_MSG_VM_CONVERT_TO_TEMPLATE_FAILURE = "VM_CONVERT_TO_TEMPLATE_FAILURE";
	public static final String ERROR_MSG_VM_CREATE_FAILURE = "VM_CREATE_FAILURE";
	public static final String ERROR_MSG_VM_COPY_VM_FAILURE = "VM_COPY_VM_FAILURE";
	public static final String ERROR_MSG_VM_NOT_EXIST = "VM_NOT_EXIST";
	public static final String ERROR_MSG_VM_IS_RUNNING = "VM_IS_RUNNING";
	
	public static final String ERROR_MSG_SR_NFS_NOT_EXIST = "SR_NFS_NOT_EXIST";
	public static final String ERROR_MSG_SR_NFS_OUT_OF_SPACE = "SR_NFS_OUT_OF_SPACE";
	public static final String ERROR_MSG_SR_NFS_CONNECT_FAILURE = "SR_NFS_CONNECT_FAILURE";
	public static final String ERROR_MSG_SR_NFS_FIX_FAILURE = "SR_NFS_FIX_FAILURE";
	public static final String ERROR_MSG_SR_LOCAL_GET_FAILURE = "SR_LOCAL_GET_FAILURE";
	public static final String ERROR_MSG_SR_LOCAL_OUT_OF_SPACE = "SR_LOCAL_OUT_OF_SPACE";
	
	public static final String ERROR_MSG_DATABASE_CONNECT_FAILURE = "DATABASE_CONNECT_FAILURE";
	public static final String ERROR_MSG_DATABASE_OPERATE_FAILURE = "DATABASE_OPERATE_FAILURE";
	public static final String ERROR_MSG_DATABASE_OUT_OF_SPACE = "DATABASE_OUT_OF_SPACE";
	
	public static final String ERROR_MSG_HOST_NAME_TOO_LONG = "HOST_NAME_TOO_LONG";
	public static final String ERROR_MSG_HOST_NAME_INVALID = "HOST_NAME_INVALID";
	public static final String ERROR_MSG_HOST_OUT_OF_SPACE = "HOST_OUT_OF_SPACE";
	public static final String ERROR_MSG_HOST_DISABLED = "HOST_DISABLED";
	public static final String ERROR_MSG_HOST_UUID_INVALID = "ERROR_MSG_HOST_UUID_INVALID";
	public static final String ERROR_MSG_HOST_NOT_ALIVE = "ERROR_MSG_HOST_NOT_ALIVE";
	public static final String ERROR_MSG_HOST_IS_BUSY = "ERROR_MSG_HOST_IS_BUSY";
	
	
	public static final String ERROR_MSG_VBDS_GET_FAILURE = "VBDS_GET_FAILURE";
	public static final String ERROR_MSG_VBD_GET_FAILURE = "VBD_GET_FAILURE";
	public static final String ERROR_MSG_VBD_GET_REC_FAILURE = "VBD_GET_REC_FAILURE";
	public static final String ERROR_MSG_VBD_CREATE_FAILURE = "VBD_CREATE_FAILURE";
	
	public static final String ERROR_MSG_VDI_GET_FAILURE = "VDI_GET_FAILURE";
	public static final String ERROR_MSG_VDI_GET_REC_FAILURE = "VDI_GET_REC_FAILURE";
	public static final String ERROR_MSG_VDI_CREATE_FAILURE = "VDI_CREATE_FAILURE";
	public static final String ERROR_MSG_VDI_DELETE_SNAP_FAILURE = "VDI_DELETE_SNAP_FAILURE";
	
	public static final String ERROR_MSG_VIFS_GET_FAILURE = "VIFS_GET_FAILURE";
	public static final String ERROR_MSG_VIF_GET_FAILURE = "VIF_GET_FAILURE";
	public static final String ERROR_MSG_VIF_GET_REC_FAILURE = "VIF_GET_REC_FAILURE";
	public static final String ERROR_MSG_VIF_CREATE_FAILURE = "VIF_CREATE_FAILURE";
	
	public static final String ERROR_MSG_PBDS_GET_FAILURE = "PBDS_GET_FAILURE";
	public static final String ERROR_MSG_PBD_GET_FAILURE = "PBD_GET_FAILURE";
	public static final String ERROR_MSG_PBD_GET_REC_FAILURE = "PBD_GET_REC_FAILURE";
	public static final String ERROR_MSG_PBD_CREATE_FAILURE = "PBD_CREATE_FAILURE";
	
	
	public static final String ERROR_MSG_POOL_GET_FAILURE = "POOL_GET_FAILURE";
	
	public static final String ERROR_MSG_LICENSE_INVALID = "LICENSE_INVALID";
	public static final String ERROR_MSG_LICENSE_MAC_INVALID = "LICENSE_MAC_INVALID";
	public static final String ERROR_MSG_LICENSE_SOCKET_NUMBER_LESS_THAN_ONE = "LICENSE_SOCKET_NUMBER_LESS_THAN_ONE";
	public static final String ERROR_MSG_LICENSE_GENERATE_FAILURE = "LICENSE_GENERATE_FAILURE";
	public static final String ERROR_MSG_LICENSE_APPLY_FAILURE = "LICENSE_APPLY_FAILURE";
	
	public static final String ERROR_MSG_UPGRADE_NEED_REBOOT = "NEED REBOOT SERVER";
	public static final String ERROR_MSG_UPGRADE_PREINTSTALL = "PRE-INSTALL FAIL";
	public static final String ERROR_MSG_UPGRADE_UPDATEPACKAGE = "FAILED AT UPDATE PACKAGE";
	public static final String ERROR_MSG_UPGRADE_REMOVEPACKAGE = "FAILED AT REMOVE PACKAGE";
	public static final String ERROR_MSG_UPGRADE_POST_INSTALL = "FAILED AT POST-INSTALL";
	public static final String ERROR_MSG_UPGRADE_MD5_CHECKFAIL = "MD5 CHECK SUM FAILED";
	public static final String ERROR_MSG_UPGRADE_TAR_FAIL = "TAR FAILED";
	public static final String ERROR_MSG_UPGRADE_FILENAME_EMPTY_FAIL = "FILENAME EMPTY";
	public static final String ERROR_MSG_UPGRADE_TODIR_EMPTY_FAIL = "TO DIRECTORY EMPTY";
	public static final String ERROR_MSG_UPGRADE_INTALL_SHELL_NOT_FOUDN_FAIL = "INSTALL SHELL NOT FOUND";
	public static final String ERROR_MSG_UPGRADE_INTALL_PACH_NOT_FOUND_FAIL = "INSTALL PATCH FILE NOT FOUND";
	
	public static final String ERROR_MSG_LOCAL_ENVIRONMENT_ABNOMALLY  = "LOCAL_ENVIRONMENT_ABNOMALLY";
	
	/******************status******************/
	public static final int STATUS_SUSCCESS = 1;
	public static final int STATUS_FAILURE = 0;
	
	public static final String ERROR_CODE_PREFIX = "ERROR_CODE";
	public static final String ERROR_MSG_PREFIX = "ERROR_MSG";
	
	/******************relationship between error code and error message******************/
	public static Map<Integer, String> map = null;
	
	static {
		map = new HashMap<Integer, String>();
		
		map.put(ERROR_CODE_CONNECTION_INVALID, ERROR_MSG_CONNECTION_INVALID);
		map.put(ERROR_CODE_CONNECTION_INVALID, ERROR_MSG_CONNECTION_EXPIRED);
		
		map.put(ERROR_CODE_NETSERVICE_IP_CONFIG_INVALID, ERROR_MSG_NETSERVICE_IP_CONFIG_INVALID);
		
		map.put(ERROR_CODE_TEMPLATE_NOT_EXIST, ERROR_MSG_TEMPLATE_NOT_EXIST);
		map.put(ERROR_CODE_TEMPLATE_DELETE_FAILURE, ERROR_MSG_TEMPLATE_DELETE_FAILURE);
		map.put(ERROR_CODE_TEMPLATE_COPY_FAILURE, ERROR_MSG_TEMPLATE_COPY_FAILURE);
		map.put(ERROR_CODE_TEMPLATE_DATA_NOT_MATCH, ERROR_MSG_TEMPLATE_DATA_NOT_MATCH);
		
		map.put(ERROR_CODE_VM_GET_FAILURE, ERROR_MSG_VM_GET_FAILURE);
		map.put(ERROR_CODE_VM_HOSTNAME_UPDATE_FAILURE, ERROR_MSG_VM_HOSTNAME_UPDATE_FAILURE);
		map.put(ERROR_CODE_VM_IP_UPDATE_FAILURE, ERROR_MSG_VM_IP_UPDATE_FAILURE);
		map.put(ERROR_CODE_VM_CONVERT_TO_TEMPLATE_FAILURE, ERROR_MSG_VM_CONVERT_TO_TEMPLATE_FAILURE);
		map.put(ERROR_CODE_VM_CREATE_FAILURE, ERROR_MSG_VM_CREATE_FAILURE);
		map.put(ERROR_CODE_VM_COPY_VM_FAILURE, ERROR_MSG_VM_COPY_VM_FAILURE);
		map.put(ERROR_CODE_VM_NOT_EXIST, ERROR_MSG_VM_NOT_EXIST);
		map.put(ERROR_CODE_VM_IS_RUNNING, ERROR_MSG_VM_IS_RUNNING);
		
		map.put(ERROR_CODE_SR_NFS_NOT_EXIST, ERROR_MSG_SR_NFS_NOT_EXIST);
		map.put(ERROR_CODE_SR_NFS_OUT_OF_SPACE, ERROR_MSG_SR_NFS_OUT_OF_SPACE);
		map.put(ERROR_CODE_SR_NFS_CONNECT_FAILURE, ERROR_MSG_SR_NFS_CONNECT_FAILURE);
		map.put(ERROR_CODE_SR_NFS_FIX_FAILURE, ERROR_MSG_SR_NFS_FIX_FAILURE);
		map.put(ERROR_CODE_SR_LOCAL_GET_FAILURE, ERROR_MSG_SR_LOCAL_GET_FAILURE);
		map.put(ERROR_CODE_SR_LOCAL_OUT_OF_SPACE, ERROR_MSG_SR_LOCAL_OUT_OF_SPACE);
		
		map.put(ERROR_CODE_DATABASE_CONNECT_FAILURE, ERROR_MSG_DATABASE_CONNECT_FAILURE);
		map.put(ERROR_CODE_DATABASE_OPERATE_FAILURE, ERROR_MSG_DATABASE_OPERATE_FAILURE);
		map.put(ERROR_CODE_DATABASE_OUT_OF_SPACE, ERROR_MSG_DATABASE_OUT_OF_SPACE);
		
		map.put(ERROR_CODE_HOST_NAME_TOO_LONG, ERROR_MSG_HOST_NAME_TOO_LONG);
		map.put(ERROR_CODE_HOST_NAME_INVALID, ERROR_MSG_HOST_NAME_INVALID);
		map.put(ERROR_CODE_HOST_OUT_OF_SPACE, ERROR_MSG_HOST_OUT_OF_SPACE);
		map.put(ERROR_CODE_HOST_DISABLED, ERROR_MSG_HOST_DISABLED);
		map.put(ERROR_CODE_HOST_UUID_INVALID, ERROR_MSG_HOST_UUID_INVALID);
		map.put(ERROR_CODE_HOST_NOT_ALIVE, ERROR_MSG_HOST_NOT_ALIVE);
		map.put(ERROR_CODE_HOST_IS_BUSY, ERROR_MSG_HOST_IS_BUSY);
		
		map.put(ERROR_CODE_VBDS_GET_FAILURE, ERROR_MSG_VBDS_GET_FAILURE);
		map.put(ERROR_CODE_VBD_GET_FAILURE, ERROR_MSG_VBD_GET_FAILURE);
		map.put(ERROR_CODE_VBD_GET_REC_FAILURE, ERROR_MSG_VBD_GET_REC_FAILURE);
		map.put(ERROR_CODE_VBD_CREATE_FAILURE, ERROR_MSG_VBD_CREATE_FAILURE);
		
		map.put(ERROR_CODE_VDI_GET_FAILURE, ERROR_MSG_VDI_GET_FAILURE);
		map.put(ERROR_CODE_VDI_GET_REC_FAILURE, ERROR_MSG_VDI_GET_REC_FAILURE);
		map.put(ERROR_CODE_VDI_CREATE_FAILURE, ERROR_MSG_VDI_CREATE_FAILURE);
		map.put(ERROR_CODE_VDI_DELETE_SNAP_FAILURE, ERROR_MSG_VDI_DELETE_SNAP_FAILURE);
		
		map.put(ERROR_CODE_VIFS_GET_FAILURE, ERROR_MSG_VIFS_GET_FAILURE);
		map.put(ERROR_CODE_VIF_GET_FAILURE, ERROR_MSG_VIF_GET_FAILURE);
		map.put(ERROR_CODE_VIF_GET_REC_FAILURE, ERROR_MSG_VIF_GET_REC_FAILURE);
		map.put(ERROR_CODE_VIF_CREATE_FAILURE, ERROR_MSG_VIF_CREATE_FAILURE);
		
		map.put(ERROR_CODE_PBDS_GET_FAILURE, ERROR_MSG_PBDS_GET_FAILURE);
		map.put(ERROR_CODE_PBD_GET_FAILURE, ERROR_MSG_PBD_GET_FAILURE);
		map.put(ERROR_CODE_PBD_GET_REC_FAILURE, ERROR_MSG_PBD_GET_REC_FAILURE);
		map.put(ERROR_CODE_PBD_CREATE_FAILURE, ERROR_MSG_PBD_CREATE_FAILURE);
		
		map.put(ERROR_CODE_POOL_GET_FAILURE, ERROR_MSG_POOL_GET_FAILURE);
		
		map.put(ERROR_CODE_LICENSE_INVALID, ERROR_MSG_LICENSE_INVALID);
		map.put(ERROR_CODE_LICENSE_MAC_INVALID, ERROR_MSG_LICENSE_MAC_INVALID);
		map.put(ERROR_CODE_LICENSE_SOCKET_NUMBER_LESS_THAN_ONE, ERROR_MSG_LICENSE_SOCKET_NUMBER_LESS_THAN_ONE);
		map.put(ERROR_CODE_LICENSE_GENERATE_FAILURE, ERROR_MSG_LICENSE_GENERATE_FAILURE);
		map.put(ERROR_CODE_LICENSE_APPLY_FAILURE, ERROR_MSG_LICENSE_APPLY_FAILURE);
		
		map.put(ERROR_CODE_UPGRADE_FILENAME_EMPTY_FAIL, ERROR_MSG_UPGRADE_FILENAME_EMPTY_FAIL);
		map.put(ERROR_CODE_UPGRADE_INTALL_PACH_NOT_FOUND_FAIL, ERROR_MSG_UPGRADE_INTALL_PACH_NOT_FOUND_FAIL);
		map.put(ERROR_CODE_UPGRADE_INTALL_SHELL_NOT_FOUDN_FAIL, ERROR_MSG_UPGRADE_INTALL_SHELL_NOT_FOUDN_FAIL);
		map.put(ERROR_CODE_UPGRADE_MD5_CHECKFAIL, ERROR_MSG_UPGRADE_MD5_CHECKFAIL);
		map.put(ERROR_CODE_UPGRADE_NEED_REBOOT, ERROR_MSG_UPGRADE_NEED_REBOOT);
		map.put(ERROR_CODE_UPGRADE_POST_INSTALL, ERROR_MSG_UPGRADE_POST_INSTALL);
		map.put(ERROR_CODE_UPGRADE_PREINTSTALL, ERROR_MSG_UPGRADE_PREINTSTALL);
		map.put(ERROR_CODE_UPGRADE_REMOVEPACKAGE, ERROR_MSG_UPGRADE_REMOVEPACKAGE);
		map.put(ERROR_CODE_UPGRADE_TAR_FAIL, ERROR_MSG_UPGRADE_TAR_FAIL);
		map.put(ERROR_CODE_UPGRADE_TODIR_EMPTY_FAIL, ERROR_MSG_UPGRADE_TODIR_EMPTY_FAIL);
		map.put(ERROR_CODE_UPGRADE_UPDATEPACKAGE, ERROR_MSG_UPGRADE_UPDATEPACKAGE);
		
		map.put(ERROR_CODE_LOCAL_ENVIRONMENT_ABNOMALLY, ERROR_MSG_LOCAL_ENVIRONMENT_ABNOMALLY);
		
	}

	public static Map<Integer, String> getMap() {
		return map;
	}

	
}
